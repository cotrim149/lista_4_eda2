/*
 * Job.cpp
 *
 *  Created on: Oct 6, 2014
 *      Author: cotrim
 */

#include "Job.h"

Job::Job() {
	// TODO Auto-generated constructor stub

}

Job::~Job() {
	// TODO Auto-generated destructor stub
}

float Job::getEndTime() const
{
    return endTime;
}

float Job::getStartTime() const
{
    return startTime;
}

void Job::setEndTime(float endTime)
{
    this->endTime = endTime;
}

void Job::setStartTime(float startTime)
{
    this->startTime = startTime;
}

vector<Job> createRandomTasks(){

	srand (static_cast <unsigned> (time(0)));

	int totalTasks = 10;
	vector<Job> jobs(totalTasks);


	for(int i=0;i<totalTasks;i++){

		float startTime = static_cast <float> (rand()) / (static_cast <float> (RAND_MAX/24));
		float endTime = static_cast <float> (rand()) / (static_cast <float> (RAND_MAX/24));

		Job job;
		job.setStartTime(startTime);
		job.setEndTime(endTime);

		jobs.push_back(job);

	}

	jobs = jobs;

	return jobs;
}

void printJobs(vector<Job> jobs){


	for(unsigned int i=0; i< jobs.size(); i++){
		cout << "Tarefa: " << i << endl;
		cout << "Start Time: " << jobs[i].getStartTime() << endl;
		cout << "End Time: " << jobs[i].getEndTime() << endl;
	}

}





